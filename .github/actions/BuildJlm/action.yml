name: "Build jlm"
description: "Configures and builds jlm along with the necessary dependencies."

inputs:
  enable-hls:
    description: "Enables HLS dialect. Default is 'false'."
    default: "false"
    required: false

  enable-mlir:
    description: "Enables MLIR dialect. Default is 'false'."
    default: "false"
    required: false

  enable-coverage:
    description: "Enables computation of test coverage. Default is 'false'."
    default: "false"
    required: false

  cxx:
    description: "Set C++ compiler. Default is 'clang++'."
    default: "clang++"
    required: false

  make-target:
    description: "The make target that is invoked for compilation."
    default: "all"
    required: false

runs:
  using: "composite"
  steps:
    - name: "Validate input"
      if: ${{(inputs.enable-hls != 'true' && inputs.enable-hls != 'false')
        || (inputs.enable-mlir != 'true' && inputs.enable-mlir != 'false')
        || (inputs.enable-coverage != 'true' && inputs.enable-coverage != 'false')}}
      run: |
        echo "Invalid composite action inputs:"
        echo "enable-hls: ${{inputs.enable-hls}}"
        echo "enable-mlir: ${{inputs.enable-mlir}}"
        echo "enable-coverage: ${{inputs.enable-coverage}}"
        exit 1
      shell: bash

    - name: "Install dependencies"
      uses: ./.github/actions/InstallPackages
      with:
        install-llvm: true
        install-clang: true
        install-valgrind: true  # Required for make target valgrind-check

    - name: "Install HLS dialect dependencies"
      if: ${{inputs.enable-hls == 'true'}}
      uses: ./.github/actions/BuildCirct

    - name: "Install MLIR dialect dependencies"
      if: ${{inputs.enable-mlir == 'true'}}
      uses: ./.github/actions/BuildMlirDialect

    - name: "Collect command line arguments"
      id: collect
      run: |
        export JLM_CONFIGURE_ARGUMENTS="--target release --enable-asserts"
        if [[ "${{inputs.enable-hls}}" == "true" ]]; then
          JLM_CONFIGURE_ARGUMENTS="$JLM_CONFIGURE_ARGUMENTS --enable-hls ${{ github.workspace }}/build-circt/circt"
        fi
        if [[ "${{inputs.enable-mlir}}" == "true" ]]; then
          JLM_CONFIGURE_ARGUMENTS="$JLM_CONFIGURE_ARGUMENTS --enable-mlir ${{ github.workspace }}/lib/mlir-rvsdg"
        fi
        if [[ "${{inputs.enable-coverage}}" == "true" ]]; then
          JLM_CONFIGURE_ARGUMENTS="$JLM_CONFIGURE_ARGUMENTS --enable-coverage"
        fi
        JLM_CONFIGURE_ARGUMENTS="$JLM_CONFIGURE_ARGUMENTS CXX=${{inputs.cxx}}"
        echo "jlm_configure_arguments=$JLM_CONFIGURE_ARGUMENTS" >> $GITHUB_OUTPUT
      shell: bash

    - name: "Configure jlm"
      run: ./configure.sh ${{steps.collect.outputs.jlm_configure_arguments}}
      shell: bash

    - name: "Compile jlm"
      run: make -j `nproc` -O ${{inputs.make-target}}
      shell: bash

    - name: "Add executables to PATH"
      run: echo '${{ github.workspace }}/build' >> $GITHUB_PATH
      shell: bash
