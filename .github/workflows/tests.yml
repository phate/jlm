name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  docs:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt-get install graphviz doxygen
    - name: Generate documentation
      run: make docs

  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Cache build
      id: cache-bin
      uses: actions/cache@v2.1.4
      with:
        path: ${{ github.workspace }}/bin/*
        key: ${{ runner.os }}-${{ github.sha }}-jlm-bin
    - name: Cache build
      id: cache-build
      uses: actions/cache@v2.1.4
      with:
        path: ${{ github.workspace }}/*
        key: ${{ runner.os }}-${{ github.sha }}-jlm
    - name: Get key used for LLVM packages
      run: wget https://apt.llvm.org/llvm-snapshot.gpg.key
    - name: Add the key to apt
      run: sudo apt-key add llvm-snapshot.gpg.key
    - name: Add deb URL to sources.list
      run: sudo sh -c 'echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
    - name: Add deb-src URL to sources.list
      run: sudo sh -c 'echo "deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
    - name: Update the list of packages
      run: sudo apt-get update
    - name: Install dependencies (LLVM)
      run: sudo apt-get install llvm-13-dev clang-13
    - name: Compile jlm
      run: make jlm-release -j `nproc`
    - name: Run unit and C tests
      run: make check -j `nproc`

  ubuntu-latest-gcc:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Get key used for LLVM packages
      run: wget https://apt.llvm.org/llvm-snapshot.gpg.key
    - name: Add the key to apt
      run: sudo apt-key add llvm-snapshot.gpg.key
    - name: Add deb URL to sources.list
      run: sudo sh -c 'echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
    - name: Add deb-src URL to sources.list
      run: sudo sh -c 'echo "deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
    - name: Update the list of packages
      run: sudo apt-get update
    - name: Install dependencies (LLVM)
      run: sudo apt-get install llvm-13-dev clang-13
    - name: Compile jlm
      run: make CXX=g++ jlm-release -j `nproc`
    - name: Run unit and C tests
      run: make check -j `nproc`

  valgrind:
    runs-on: ubuntu-20.04
    needs: build
    steps:
    - name: Cache
      uses: actions/cache@v2.1.4
      with:
        path: ${{ github.workspace }}/*
        key: ${{ runner.os }}-${{ github.sha }}-jlm
    - name: Add jlc to PATH
      run: echo '${{ github.workspace }}/bin' >> $GITHUB_PATH
    - name: Get key used for LLVM packages
      run: wget https://apt.llvm.org/llvm-snapshot.gpg.key
    - name: Add the key to apt
      run: sudo apt-key add llvm-snapshot.gpg.key
    - name: Add deb URL to sources.list
      run: sudo sh -c 'echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
    - name: Add deb-src URL to sources.list
      run: sudo sh -c 'echo "deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
    - name: Update the list of packages
      run: sudo apt-get update
    - name: Install dependencies (LLVM)
      run: sudo apt-get install llvm-13-dev clang-13
    - name: Install valgrind
      run: sudo apt-get install valgrind
    - name: Valgrind Check 
      run: make -C ${{ github.workspace }} valgrind-check

  polybench:
    runs-on: ubuntu-20.04
    needs: build
    steps:
    - name: Cache
      uses: actions/cache@v2.1.4
      with:
        path: ${{ github.workspace }}/bin/*
        key: ${{ runner.os }}-${{ github.sha }}-jlm-bin
    - name: Add jlc to PATH
      run: echo '${{ github.workspace }}/bin' >> $GITHUB_PATH
    - name: Get key used for LLVM packages
      run: wget https://apt.llvm.org/llvm-snapshot.gpg.key
    - name: Add the key to apt
      run: sudo apt-key add llvm-snapshot.gpg.key
    - name: Add deb URL to sources.list
      run: sudo sh -c 'echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
    - name: Add deb-src URL to sources.list
      run: sudo sh -c 'echo "deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
    - name: Update the list of packages
      run: sudo apt-get update
    - name: Install dependencies (LLVM)
      run: sudo apt-get install llvm-13-dev clang-13
    - name: Clone polybench
      run: git clone https://github.com/phate/polybench-jlm.git
    - name: Check polybench
      run: make -C polybench-jlm check -j `nproc`

  llvm-test-suite:
    runs-on: ubuntu-20.04
    needs: build
    steps:
    - name: Cache
      uses: actions/cache@v2.1.4
      with:
        path: ${{ github.workspace }}/bin/*
        key: ${{ runner.os }}-${{ github.sha }}-jlm-bin
    - name: Add jlc to PATH
      run: echo '${{ github.workspace }}/bin' >> $GITHUB_PATH
    - name: Get key used for LLVM packages
      run: wget https://apt.llvm.org/llvm-snapshot.gpg.key
    - name: Add the key to apt
      run: sudo apt-key add llvm-snapshot.gpg.key
    - name: Add deb URL to sources.list
      run: sudo sh -c 'echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
    - name: Add deb-src URL to sources.list
      run: sudo sh -c 'echo "deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
    - name: Update the list of packages
      run: sudo apt-get update
    - name: Install dependencies (LLVM)
      run: sudo apt-get install llvm-13-dev clang-13
    - name: Clone jlm-test-suite
      run: git clone https://github.com/phate/jlm-eval-suite.git
    - name: Update submodules
      run: make -C jlm-eval-suite submodule
    - name: Install lit
      run: cd jlm-eval-suite && make install-lit 
    - name: Apply patch
      run: cd jlm-eval-suite && make apply-llvm-git-patch
    - name: Run llvm-test-suite
      run: cd jlm-eval-suite/llvm-test-suite && make llvm-run-opt
