name: HLS

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  # --------
  # We build CIRCT in a separate job.
  # This makes it more likely that when rerunning failed jobs it's
  # not necessary to rebuild CIRCT.
  # --------

  circt:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    # --------
    # Restore CIRCT from cache and build if it's not in there
    # --------

    # Clone jlm-eval-suite
    - name: Clone jlm-test-suite
      run: git clone https://github.com/phate/jlm-eval-suite.git

    # Extract the CIRCT submodule hash for use in the cache key
    - name: Get CIRCT hash
      id: get-circt-hash
      run: |
        cd jlm-eval-suite
        echo "hash=$(git rev-parse @:./circt)" >> $GITHUB_OUTPUT

    # Try to fetch CIRCT from the cache
    - name: Cache CIRCT
      id: cache-circt
      uses: actions/cache@v3
      with:
        path: |
          jlm-eval-suite/circt/local
        key: ${{ runner.os }}-circt-${{ steps.get-circt-hash.outputs.hash }}

    # Install dependencies if we didn't hit in the cache
    - name: Install dependencies
      if: steps.cache-circt.outputs.cache-hit != 'true'
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-16 main
        sudo apt-get install llvm-16-dev libmlir-16-dev mlir-16-tools clang-16 ninja-build
        sudo ln -s /usr/lib/llvm-16/lib/libMLIR.so.16 /usr/lib/x86_64-linux-gnu/ && sudo ln -s /usr/lib/llvm-16/lib/libMLIR.so.16 /usr/lib/x86_64-linux-gnu/libMLIR.so
        sudo python3 /usr/lib/llvm-16/build/utils/lit/setup.py install

    # Build CIRCT if we didn't hit in the cache
    - name: Rebuild and Install CIRCT
      if: steps.cache-circt.outputs.cache-hit != 'true'
      run: |
        cd jlm-eval-suite
        make submodule-circt
        make circt-build

  hls-test-suite:
    runs-on: ubuntu-22.04
    needs: circt
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    # --------
    # Install dependencies
    # --------

    - name: "Install LLVM, Clang, MLIR, and Ninja"
      uses: ./.github/actions/InstallLlvmDependencies
    - name: Place MLIRlib in system folder
      run: sudo ln -s /usr/lib/llvm-16/lib/libMLIR.so.16 /usr/lib/x86_64-linux-gnu/ && sudo ln -s /usr/lib/llvm-16/lib/libMLIR.so.16 /usr/lib/x86_64-linux-gnu/libMLIR.so

    # --------
    # Restore CIRCT from cache or build it if it's not in the cache
    # --------

    # Clone jlm-eval-suite
    - name: Clone jlm-test-suite
      run: git clone https://github.com/phate/jlm-eval-suite.git

    # Extract the CIRCT submodule hash for use in the cache key
    - name: Get CIRCT hash
      id: get-circt-hash
      run: |
        cd jlm-eval-suite
        echo "hash=$(git rev-parse @:./circt)" >> $GITHUB_OUTPUT

    # Try to fetch CIRCT from the cache
    - name: Cache CIRCT
      id: cache-circt
      uses: actions/cache@v3
      with:
        path: |
          jlm-eval-suite/circt/local
        key: ${{ runner.os }}-circt-${{ steps.get-circt-hash.outputs.hash }}

    # Build CIRCT if we didn't hit in the cache
    - name: Rebuild and Install CIRCT
      if: steps.cache-circt.outputs.cache-hit != 'true'
      run: |
        cd jlm-eval-suite
        make submodule-circt
        make circt-build

    # --------
    # Compile MLIR version of jlm
    # --------

    - name: Compile jlm
      run: make CIRCT_PATH=$(pwd)/jlm-eval-suite/circt/local jlm-release -j `nproc`
    - name: Place the bin directory to where it is expected by jlm-eval-suite
      run: ln -s ${{ github.workspace }}/bin jlm-eval-suite/jlm/bin

    # --------
    # Run HLS test suite
    # --------

    - name: Install verilator
      run: sudo apt-get install verilator
    - name: Run hls-test-suite
      run: |
        cd jlm-eval-suite
        make hls-test-run
